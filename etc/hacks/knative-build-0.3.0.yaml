---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: knative-build
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - configMap
  - secret
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: build-controller
  name: build-controller
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: build-controller
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: build-webhook
  name: build-webhook
spec:
  ports:
  - port: 443
    targetPort: 443
  selector:
    role: build-webhook
---
apiVersion: caching.internal.knative.dev/v1alpha1
kind: Image
metadata:
  name: creds-init
spec:
  image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-build-creds-init
---
apiVersion: caching.internal.knative.dev/v1alpha1
kind: Image
metadata:
  name: git-init
spec:
  image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-build-git-init
---
apiVersion: caching.internal.knative.dev/v1alpha1
kind: Image
metadata:
  name: gcs-fetcher
spec:
  image: gcr.io/cloud-builders/gcs-fetcher
---
apiVersion: caching.internal.knative.dev/v1alpha1
kind: Image
metadata:
  name: nop
spec:
  image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-build-nop
---
apiVersion: v1
data:
  loglevel.controller: info
  loglevel.creds-init: info
  loglevel.git-init: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
kind: ConfigMap
metadata:
  name: config-logging
