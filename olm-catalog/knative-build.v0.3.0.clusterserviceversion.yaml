apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: knative-build.v0.3.0
  annotations:
    alm-examples: '[{"apiVersion":"build.knative.dev/v1alpha1","kind":"Build","metadata":{"name":"sample-build"},"spec":{"source":{"git":{"url":"https://github.com/knative/build.git","revision":"master"}},"steps":[{"image":"fedora","args":["cat", "README.md"]}]}}]'
spec:
  displayName: Knative Build
  description: |
    Kubernetes-native Build resource
  version: 0.3.0
  maturity: alpha
  replaces: knative-build.v0.2.0

  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces

  install:
    strategy: deployment
    spec:
      clusterPermissions:
      - serviceAccountName: build-controller
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - namespaces
          - secrets
          - events
          - serviceaccounts
          - configmaps
          - services
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - extensions
          resources:
          - deployments
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - mutatingwebhookconfigurations
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - build.knative.dev
          resources:
          - builds
          - buildtemplates
          - clusterbuildtemplates
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - build.knative.dev
          resources:
          - builds/status
          - buildtemplates/status
          - clusterbuildtemplates/status
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - caching.internal.knative.dev
          resources:
          - images
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - patch
          - watch
        - apiGroups:
          - policy
          resourceNames:
          - knative-build
          resources:
          - podsecuritypolicies
          verbs:
          - use

        # The above rules are from upstream. The remaining are
        # required for OpenShift

        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - use
          resourceNames:
          - privileged
          - anyuid
        - apiGroups:
          - extensions
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - build.knative.dev
          resources:
          - '*/finalizers'
          verbs:
          - update
        - apiGroups:
          - policy
          resources:
          - podsecuritypolicies
          verbs:
          - create
          - patch
          - get

      deployments:
      - name: build-controller
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: build-controller
          template:
            metadata:
              labels:
                app: build-controller
            spec:
              containers:
              - args:
                - -logtostderr
                - -stderrthreshold
                - INFO
                - -creds-image
                - registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-build-creds-init
                - -git-image
                - registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-build-git-init
                - -nop-image
                - registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-build-nop
                env:
                - name: SYSTEM_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-build-controller
                name: build-controller
                volumeMounts:
                - mountPath: /etc/config-logging
                  name: config-logging
              initContainers:
              - name: olm-hack
                image: lachlanevenson/k8s-kubectl:v1.12.6
                args: ['apply', '-f', 'https://raw.githubusercontent.com/mvinkler/knative-operators/knative-v0.3/etc/hacks/knative-build-0.3.0.yaml']
              serviceAccountName: build-controller
              volumes:
              - configMap:
                  name: config-logging
                  optional: true
                name: config-logging
      - name: build-webhook
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: build-webhook
          template:
            metadata:
              labels:
                app: build-webhook
                role: build-webhook
            spec:
              containers:
              - args:
                - -logtostderr
                - -stderrthreshold
                - INFO
                env:
                - name: SYSTEM_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-build-webhook
                name: build-webhook
                volumeMounts:
                - mountPath: /etc/config-logging
                  name: config-logging
              serviceAccountName: build-controller
              volumes:
              - configMap:
                  name: config-logging
                name: config-logging
  customresourcedefinitions:
    owned:
      - description: Create and run on-cluster processes to completion
        displayName: Build
        kind: Build
        name: builds.build.knative.dev
        version: v1alpha1
        statusDescriptors:
          - description: The Pod this Build ran on
            displayName: Build Pod
            path: cluster.podName
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes:Pod'
          - description: The start time of the Build
            displayName: Start Time
            path: startTime
            x-descriptors:
              - 'urn:alm:descriptor:text'
          - description: The completion time of the Build
            displayName: Completion Time
            path: completionTime
            x-descriptors:
              - 'urn:alm:descriptor:text'
          - description: The conditions of this Build
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
      - description: Encapsulates a configurable, reusable build process
        displayName: Build Template
        kind: BuildTemplate
        name: buildtemplates.build.knative.dev
        version: v1alpha1
      - description: Encapsulates a cluster-scoped build process
        displayName: Cluster Build Template
        kind: ClusterBuildTemplate
        name: clusterbuildtemplates.build.knative.dev
        version: v1alpha1
