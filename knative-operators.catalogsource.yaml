kind: ConfigMap
apiVersion: v1
metadata:
  name: knative-operators

data:
  customResourceDefinitions: |-
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: builds.build.knative.dev
      spec:
        additionalPrinterColumns:
        - JSONPath: .status.conditions[?(@.type=="Succeeded")].status
          name: Succeeded
          type: string
        - JSONPath: .status.conditions[?(@.type=="Succeeded")].reason
          name: Reason
          type: string
        - JSONPath: .status.startTime
          name: StartTime
          type: date
        - JSONPath: .status.completionTime
          name: CompletionTime
          type: date
        group: build.knative.dev
        names:
          categories:
          - all
          - knative
          kind: Build
          plural: builds
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: buildtemplates.build.knative.dev
      spec:
        additionalPrinterColumns:
        - JSONPath: .metadata.creationTimestamp
          name: Age
          type: date
        group: build.knative.dev
        names:
          categories:
          - all
          - knative
          kind: BuildTemplate
          plural: buildtemplates
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: clusterbuildtemplates.build.knative.dev
      spec:
        additionalPrinterColumns:
        - JSONPath: .metadata.creationTimestamp
          name: Age
          type: date
        group: build.knative.dev
        names:
          categories:
          - all
          - knative
          kind: ClusterBuildTemplate
          plural: clusterbuildtemplates
        scope: Cluster
        subresources:
          status: {}
        version: v1alpha1
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: channels.eventing.knative.dev
      spec:
        group: eventing.knative.dev
        names:
          categories:
          - all
          - knative
          - eventing
          kind: Channel
          plural: channels
          shortNames:
          - chan
          singular: channel
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1

    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: clusterchannelprovisioners.eventing.knative.dev
      spec:
        group: eventing.knative.dev
        names:
          categories:
          - all
          - knative
          - eventing
          - provisioner
          kind: ClusterChannelProvisioner
          plural: clusterchannelprovisioners
          shortNames:
          - ccp
          singular: clusterchannelprovisioner
        scope: Cluster
        subresources:
          status: {}
        version: v1alpha1

    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: subscriptions.eventing.knative.dev
      spec:
        group: eventing.knative.dev
        names:
          categories:
          - all
          - knative
          - eventing
          kind: Subscription
          plural: subscriptions
          shortNames:
          - sub
          singular: subscription
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          controller-tools.k8s.io: "1.0"
        name: containersources.sources.eventing.knative.dev
      spec:
        group: sources.eventing.knative.dev
        names:
          categories:
          - all
          - knative
          - eventing
          - sources
          kind: ContainerSource
          plural: containersources
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  args:
                    items:
                      type: string
                    type: array
                  env:
                    items:
                      type: object
                    type: array
                  image:
                    minLength: 1
                    type: string
                  serviceAccountName:
                    type: string
                  sink:
                    type: object
                type: object
              status:
                properties:
                  conditions:
                    items:
                      properties:
                        lastTransitionTime:
                          type: string
                        message:
                          type: string
                        reason:
                          type: string
                        severity:
                          type: string
                        status:
                          type: string
                        type:
                          type: string
                      required:
                      - type
                      - status
                      type: object
                    type: array
                  sinkUri:
                    type: string
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: []
        storedVersions: []
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          controller-tools.k8s.io: "1.0"
        name: cronjobsources.sources.eventing.knative.dev
      spec:
        group: sources.eventing.knative.dev
        names:
          categories:
          - all
          - knative
          - eventing
          - sources
          kind: CronJobSource
          plural: cronjobsources
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  data:
                    type: string
                  schedule:
                    type: string
                  serviceAccountName:
                    type: string
                  sink:
                    type: object
                required:
                - schedule
                type: object
              status:
                properties:
                  conditions:
                    items:
                      properties:
                        lastTransitionTime:
                          type: string
                        message:
                          type: string
                        reason:
                          type: string
                        severity:
                          type: string
                        status:
                          type: string
                        type:
                          type: string
                      required:
                      - type
                      - status
                      type: object
                    type: array
                  sinkUri:
                    type: string
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: []
        storedVersions: []
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          controller-tools.k8s.io: "1.0"
        name: githubsources.sources.eventing.knative.dev
      spec:
        group: sources.eventing.knative.dev
        names:
          categories:
          - all
          - knative
          - eventing
          - sources
          kind: GitHubSource
          plural: githubsources
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  accessToken:
                    properties:
                      secretKeyRef:
                        type: object
                    type: object
                  eventTypes:
                    items:
                      enum:
                      - commit_comment
                      - create
                      - delete
                      - deployment
                      - deployment_status
                      - fork
                      - gollum
                      - installation
                      - integration_installation
                      - issue_comment
                      - issues
                      - label
                      - member
                      - membership
                      - milestone
                      - organization
                      - org_block
                      - page_build
                      - ping
                      - project_card
                      - project_column
                      - project
                      - public
                      - pull_request
                      - pull_request_review
                      - pull_request_review_comment
                      - push
                      - release
                      - repository
                      - status
                      - team
                      - team_add
                      - watch
                      type: string
                    minItems: 1
                    type: array
                  ownerAndRepository:
                    minLength: 1
                    type: string
                  secretToken:
                    properties:
                      secretKeyRef:
                        type: object
                    type: object
                  serviceAccountName:
                    type: string
                  sink:
                    type: object
                required:
                - ownerAndRepository
                - eventTypes
                - accessToken
                - secretToken
                type: object
              status:
                properties:
                  conditions:
                    items:
                      properties:
                        lastTransitionTime:
                          type: string
                        message:
                          type: string
                        reason:
                          type: string
                        severity:
                          type: string
                        status:
                          type: string
                        type:
                          type: string
                      required:
                      - type
                      - status
                      type: object
                    type: array
                  sinkUri:
                    type: string
                  webhookIDKey:
                    type: string
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: []
        storedVersions: []
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          controller-tools.k8s.io: "1.0"
        name: kuberneteseventsources.sources.eventing.knative.dev
      spec:
        group: sources.eventing.knative.dev
        names:
          categories:
          - all
          - knative
          - eventing
          - sources
          kind: KubernetesEventSource
          plural: kuberneteseventsources
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  namespace:
                    type: string
                  serviceAccountName:
                    type: string
                  sink:
                    type: object
                required:
                - namespace
                type: object
              status:
                properties:
                  conditions:
                    items:
                      properties:
                        lastTransitionTime:
                          type: string
                        message:
                          type: string
                        reason:
                          type: string
                        severity:
                          type: string
                        status:
                          type: string
                        type:
                          type: string
                      required:
                      - type
                      - status
                      type: object
                    type: array
                  sinkUri:
                    type: string
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: []
        storedVersions: []
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: clusteringresses.networking.internal.knative.dev
      spec:
        additionalPrinterColumns:
        - JSONPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - JSONPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
        group: networking.internal.knative.dev
        names:
          categories:
          - all
          - knative-internal
          - networking
          kind: ClusterIngress
          plural: clusteringresses
          singular: clusteringress
        scope: Cluster
        subresources:
          status: {}
        version: v1alpha1

    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: configurations.serving.knative.dev
      spec:
        additionalPrinterColumns:
        - JSONPath: .status.latestCreatedRevisionName
          name: LatestCreated
          type: string
        - JSONPath: .status.latestReadyRevisionName
          name: LatestReady
          type: string
        - JSONPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - JSONPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
        group: serving.knative.dev
        names:
          categories:
          - all
          - knative
          - serving
          kind: Configuration
          plural: configurations
          shortNames:
          - config
          - cfg
          singular: configuration
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1

    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: images.caching.internal.knative.dev
      spec:
        group: caching.internal.knative.dev
        names:
          categories:
          - all
          - knative-internal
          - caching
          kind: Image
          plural: images
          shortNames:
          - img
          singular: image
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1

    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: podautoscalers.autoscaling.internal.knative.dev
      spec:
        additionalPrinterColumns:
        - JSONPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - JSONPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
        group: autoscaling.internal.knative.dev
        names:
          categories:
          - all
          - knative-internal
          - autoscaling
          kind: PodAutoscaler
          plural: podautoscalers
          shortNames:
          - kpa
          singular: podautoscaler
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1

    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: revisions.serving.knative.dev
      spec:
        additionalPrinterColumns:
        - JSONPath: .status.serviceName
          name: Service Name
          type: string
        - JSONPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - JSONPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
        group: serving.knative.dev
        names:
          categories:
          - all
          - knative
          - serving
          kind: Revision
          plural: revisions
          shortNames:
          - rev
          singular: revision
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1

    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: routes.serving.knative.dev
      spec:
        additionalPrinterColumns:
        - JSONPath: .status.domain
          name: Domain
          type: string
        - JSONPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - JSONPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
        group: serving.knative.dev
        names:
          categories:
          - all
          - knative
          - serving
          kind: Route
          plural: routes
          shortNames:
          - rt
          singular: route
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1

    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: services.serving.knative.dev
      spec:
        additionalPrinterColumns:
        - JSONPath: .status.domain
          name: Domain
          type: string
        - JSONPath: .status.latestCreatedRevisionName
          name: LatestCreated
          type: string
        - JSONPath: .status.latestReadyRevisionName
          name: LatestReady
          type: string
        - JSONPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - JSONPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
        group: serving.knative.dev
        names:
          categories:
          - all
          - knative
          - serving
          kind: Service
          plural: services
          shortNames:
          - kservice
          - ksvc
          singular: service
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1

  clusterServiceVersions: |-
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: knative-build.v0.1.2
      spec:
        displayName: Knative Build
        description: |
          Kubernetes-native Build resource
        version: 0.1.2
        maturity: alpha

        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: build-controller
              rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - namespaces
                - secrets
                - events
                - serviceaccounts
                - configmaps
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - extensions
                resources:
                - deployments
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - admissionregistration.k8s.io
                resources:
                - mutatingwebhookconfigurations
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - apiextensions.k8s.io
                resources:
                - customresourcedefinitions
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - build.knative.dev
                resources:
                - builds
                - buildtemplates
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
            clusterPermissions:
            - serviceAccountName: build-controller
              rules:
              - apiGroups:
                - '*'
                resources:
                - '*'
                verbs:
                - '*'
              - nonResourceURLs:
                - '*'
                verbs:
                - '*'
            deployments:
            - name: build-controller
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: build-controller
                template:
                  metadata:
                    labels:
                      app: build-controller
                  spec:
                    containers:
                    - args:
                      - -builder
                      - cluster
                      - -logtostderr
                      - -stderrthreshold
                      - INFO
                      - -creds-image
                      - gcr.io/knative-releases/github.com/knative/build/cmd/creds-init@sha256:fb90fcb6b8b3ebb5a422dfc826473255f697cadae592d0bc5a723af139109f26
                      - -git-image
                      - gcr.io/knative-releases/github.com/knative/build/cmd/git-init@sha256:414cae3a0896b09c276d17301c53f88abbed8a5e412a4f117cc535bf37012f1f
                      image: gcr.io/knative-releases/github.com/knative/build/cmd/controller@sha256:040b6d58dc0f770065ce1bc050ea4528ef095025b61ecbcdecf2f41fee05e27d
                      name: build-controller
                    initContainers:
                    - name: olm-hack
                      image: lachlanevenson/k8s-kubectl
                      args: ['apply', '-f', 'https://raw.githubusercontent.com/openshift-cloud-functions/knative-operators/3aea6b6/etc/hacks/knative-build-0.1.2.yaml']
                    serviceAccountName: build-controller
            - name: build-webhook
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: build-webhook
                template:
                  metadata:
                    labels:
                      app: build-webhook
                      role: build-webhook
                  spec:
                    containers:
                    - args:
                      - -builder
                      - cluster
                      - -logtostderr
                      - -stderrthreshold
                      - INFO
                      image: gcr.io/knative-releases/github.com/knative/build/cmd/webhook@sha256:dbe322def9edc878d880546385df0a0d7df75ab29b08d747ea1c9b8ad5af2552
                      name: build-webhook
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: build-controller
                    volumes:
                    - configMap:
                        name: config-logging
                      name: config-logging
        customresourcedefinitions:
          owned:
            - description: Create and run on-cluster processes to completion
              displayName: Build
              kind: Build
              name: builds.build.knative.dev
              version: v1alpha1
            - description: Encapsulates a configurable, reusable build process
              displayName: Build Template
              kind: BuildTemplate
              name: buildtemplates.build.knative.dev
              version: v1alpha1
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: knative-build.v0.2.0
        annotations:
          alm-examples: '[{"apiVersion":"build.knative.dev/v1alpha1","kind":"Build","metadata":{"name":"sample-build"},"spec":{"source":{"git":{"url":"https://github.com/knative/build.git","revision":"master"}},"steps":[{"image":"fedora","args":["cat", "README.md"]}]}}]'
      spec:
        displayName: Knative Build
        description: |
          Kubernetes-native Build resource
        version: 0.2.0
        maturity: alpha
        replaces: knative-build.v0.1.2

        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces

        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: build-controller
              rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - namespaces
                - secrets
                - events
                - services
                - serviceaccounts
                - configmaps
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - extensions
                resources:
                - deployments
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - admissionregistration.k8s.io
                resources:
                - mutatingwebhookconfigurations
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - apiextensions.k8s.io
                resources:
                - customresourcedefinitions
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - build.knative.dev
                resources:
                - builds
                - buildtemplates
                - clusterbuildtemplates
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - caching.internal.knative.dev
                resources:
                - images
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - patch
                - watch
            clusterPermissions:
            - serviceAccountName: build-controller
              rules:
              - apiGroups:
                - '*'
                resources:
                - '*'
                verbs:
                - '*'
              - nonResourceURLs:
                - '*'
                verbs:
                - '*'
            deployments:
            - name: build-controller
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: build-controller
                template:
                  metadata:
                    labels:
                      app: build-controller
                  spec:
                    containers:
                    - args:
                      - -logtostderr
                      - -stderrthreshold
                      - INFO
                      - -creds-image
                      - gcr.io/knative-releases/github.com/knative/build/cmd/creds-init@sha256:c1c11fafd337f62eea18a1f02b78e6ae6949779bed72d53d19b2870723a8f104
                      - -git-image
                      - gcr.io/knative-releases/github.com/knative/build/cmd/git-init@sha256:6fa8043ed114920cd61e28db3c942647ba48415fe1208acde2fb2ac0746c9164
                      - -nop-image
                      - gcr.io/knative-releases/github.com/knative/build/cmd/nop@sha256:f94e6413749759bc3f80d33e76c36509d6a63f7b206d2ca8fff167a0bb9c77f2
                      env:
                      - name: SYSTEM_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      image: gcr.io/knative-releases/github.com/knative/build/cmd/controller@sha256:2667d0ff68a406e0103c58145edef916edc1b41695b38964dc6ccb0b38c0aedf
                      name: build-controller
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    initContainers:
                    - name: olm-hack
                      image: lachlanevenson/k8s-kubectl
                      args: ['apply', '-f', 'https://raw.githubusercontent.com/openshift-cloud-functions/knative-operators/master/etc/hacks/knative-build-0.2.0.yaml']
                    serviceAccountName: build-controller
                    volumes:
                    - configMap:
                        name: config-logging
                        optional: true
                      name: config-logging
            - name: build-webhook
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: build-webhook
                template:
                  metadata:
                    labels:
                      app: build-webhook
                      role: build-webhook
                  spec:
                    containers:
                    - args:
                      - -logtostderr
                      - -stderrthreshold
                      - INFO
                      env:
                      - name: SYSTEM_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      image: gcr.io/knative-releases/github.com/knative/build/cmd/webhook@sha256:58775663a5bc0d782c8505a28cc88616a5e08115959dc62fa07af5ad76c54a97
                      name: build-webhook
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: build-controller
                    volumes:
                    - configMap:
                        name: config-logging
                      name: config-logging
        customresourcedefinitions:
          owned:
            - description: Create and run on-cluster processes to completion
              displayName: Build
              kind: Build
              name: builds.build.knative.dev
              version: v1alpha1
              statusDescriptors:
                - description: The Pod this Build ran on
                  displayName: Build Pod
                  path: cluster.podName
                  x-descriptors:
                    - 'urn:alm:descriptor:io.kubernetes:Pod'
                - description: The start time of the Build
                  displayName: Start Time
                  path: startTime
                  x-descriptors:
                    - 'urn:alm:descriptor:text'
                - description: The completion time of the Build
                  displayName: Completion Time
                  path: completionTime
                  x-descriptors:
                    - 'urn:alm:descriptor:text'
                - description: The conditions of this Build
                  displayName: Conditions
                  path: conditions
                  x-descriptors:
                    - 'urn:alm:descriptor:io.kubernetes.conditions'
            - description: Encapsulates a configurable, reusable build process
              displayName: Build Template
              kind: BuildTemplate
              name: buildtemplates.build.knative.dev
              version: v1alpha1
            - description: Encapsulates a cluster-scoped build process
              displayName: Cluster Build Template
              kind: ClusterBuildTemplate
              name: clusterbuildtemplates.build.knative.dev
              version: v1alpha1
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: knative-build.v0.3.0
        annotations:
          alm-examples: '[{"apiVersion":"build.knative.dev/v1alpha1","kind":"Build","metadata":{"name":"sample-build"},"spec":{"source":{"git":{"url":"https://github.com/knative/build.git","revision":"master"}},"steps":[{"image":"fedora","args":["cat", "README.md"]}]}}]'
      spec:
        displayName: Knative Build
        description: |
          Kubernetes-native Build resource
        version: 0.3.0
        maturity: alpha
        replaces: knative-build.v0.2.0

        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces

        install:
          strategy: deployment
          spec:
            clusterPermissions:
            - serviceAccountName: build-controller
              rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - namespaces
                - secrets
                - events
                - serviceaccounts
                - configmaps
                - services
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - extensions
                resources:
                - deployments
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - admissionregistration.k8s.io
                resources:
                - mutatingwebhookconfigurations
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - apiextensions.k8s.io
                resources:
                - customresourcedefinitions
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - build.knative.dev
                resources:
                - builds
                - buildtemplates
                - clusterbuildtemplates
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - build.knative.dev
                resources:
                - builds/status
                - buildtemplates/status
                - clusterbuildtemplates/status
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - caching.internal.knative.dev
                resources:
                - images
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - deletecollection
                - patch
                - watch
              - apiGroups:
                - policy
                resourceNames:
                - knative-build
                resources:
                - podsecuritypolicies
                verbs:
                - use

              # The above rules are from upstream. The remaining are
              # required for OpenShift

              - apiGroups:
                - security.openshift.io
                resources:
                - securitycontextconstraints
                verbs:
                - use
                resourceNames:
                - privileged
                - anyuid
              - apiGroups:
                - extensions
                resources:
                - deployments/finalizers
                verbs:
                - update
              - apiGroups:
                - build.knative.dev
                resources:
                - '*/finalizers'
                verbs:
                - update
              - apiGroups:
                - policy
                resources:
                - podsecuritypolicies
                verbs:
                - create
                - patch
                - get

            deployments:
            - name: build-controller
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: build-controller
                template:
                  metadata:
                    labels:
                      app: build-controller
                  spec:
                    containers:
                    - args:
                      - -logtostderr
                      - -stderrthreshold
                      - INFO
                      - -creds-image
                      - registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-build-creds-init
                      - -git-image
                      - registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-build-git-init
                      - -nop-image
                      - registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-build-nop
                      env:
                      - name: SYSTEM_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-build-controller
                      name: build-controller
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    initContainers:
                    - name: olm-hack
                      image: lachlanevenson/k8s-kubectl:v1.12.6
                      args: ['apply', '-f', 'https://raw.githubusercontent.com/mvinkler/knative-operators/knative-v0.3/etc/hacks/knative-build-0.3.0.yaml']
                    serviceAccountName: build-controller
                    volumes:
                    - configMap:
                        name: config-logging
                        optional: true
                      name: config-logging
            - name: build-webhook
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: build-webhook
                template:
                  metadata:
                    labels:
                      app: build-webhook
                      role: build-webhook
                  spec:
                    containers:
                    - args:
                      - -logtostderr
                      - -stderrthreshold
                      - INFO
                      env:
                      - name: SYSTEM_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-build-webhook
                      name: build-webhook
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: build-controller
                    volumes:
                    - configMap:
                        name: config-logging
                      name: config-logging
        customresourcedefinitions:
          owned:
            - description: Create and run on-cluster processes to completion
              displayName: Build
              kind: Build
              name: builds.build.knative.dev
              version: v1alpha1
              statusDescriptors:
                - description: The Pod this Build ran on
                  displayName: Build Pod
                  path: cluster.podName
                  x-descriptors:
                    - 'urn:alm:descriptor:io.kubernetes:Pod'
                - description: The start time of the Build
                  displayName: Start Time
                  path: startTime
                  x-descriptors:
                    - 'urn:alm:descriptor:text'
                - description: The completion time of the Build
                  displayName: Completion Time
                  path: completionTime
                  x-descriptors:
                    - 'urn:alm:descriptor:text'
                - description: The conditions of this Build
                  displayName: Conditions
                  path: conditions
                  x-descriptors:
                    - 'urn:alm:descriptor:io.kubernetes.conditions'
            - description: Encapsulates a configurable, reusable build process
              displayName: Build Template
              kind: BuildTemplate
              name: buildtemplates.build.knative.dev
              version: v1alpha1
            - description: Encapsulates a cluster-scoped build process
              displayName: Cluster Build Template
              kind: ClusterBuildTemplate
              name: clusterbuildtemplates.build.knative.dev
              version: v1alpha1
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: knative-eventing.v0.2.0
      spec:
        displayName: Knative Eventing
        description: |
          Kubernetes-native Eventing resource
        version: 0.2.0
        maturity: alpha

        install:
          strategy: deployment
          spec:
            clusterPermissions:
            - serviceAccountName: default
              rules:
              - apiGroups:
                - '*'
                resources:
                - '*'
                verbs:
                - '*'
              - nonResourceURLs:
                - '*'
                verbs:
                - '*'

            deployments:
            - name: eventing-controller
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: eventing-controller
                template:
                  metadata:
                    labels:
                      app: eventing-controller
                  spec:
                    containers:
                    - args:
                      - -logtostderr
                      - -stderrthreshold
                      - INFO
                      - --experimentalControllers=subscription.eventing.knative.dev
                      image: gcr.io/knative-releases/github.com/knative/eventing/cmd/controller@sha256:bfb8bf951f2ccead13e5d999f3c8e44a5c815f89eef03391aa061e19407bcd9b
                      name: eventing-controller
                      terminationMessagePolicy: FallbackToLogsOnError
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    initContainers:
                    - name: olm-hack
                      image: lachlanevenson/k8s-kubectl
                      args: ['apply', '-f', 'https://raw.githubusercontent.com/openshift-cloud-functions/knative-operators/ffc60a7/etc/hacks/knative-eventing-0.2.0.yaml']
                    serviceAccountName: default
                    volumes:
                    - configMap:
                        name: config-logging
                        optional: true
                      name: config-logging

            - name: webhook
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: webhook
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "false"
                    labels:
                      app: webhook
                      role: webhook
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/github.com/knative/eventing/cmd/webhook@sha256:0c8e6180481663045088cebea41cfbf92ef590da748b92bed77a8c0dc2539bff
                      name: webhook
                      terminationMessagePolicy: FallbackToLogsOnError
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: default
                    volumes:
                    - configMap:
                        name: config-logging
                      name: config-logging

            - name: in-memory-channel-controller
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    clusterChannelProvisioner: in-memory-channel
                    role: controller
                template:
                  metadata:
                    labels:
                      clusterChannelProvisioner: in-memory-channel
                      role: controller
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/github.com/knative/eventing/pkg/controller/eventing/inmemory/controller@sha256:cbc86e2faa593cdd34c2ed54fd171fcbed4bfa26017c1e7db554c584162a8846
                      name: controller
                    serviceAccountName: default

            - name: in-memory-channel-dispatcher
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    clusterChannelProvisioner: in-memory-channel
                    role: dispatcher
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "true"
                    labels:
                      clusterChannelProvisioner: in-memory-channel
                      role: dispatcher
                  spec:
                    containers:
                    - args:
                      - --sidecar_port=8080
                      - --config_map_noticer=watcher
                      - --config_map_namespace=knative-eventing
                      - --config_map_name=in-memory-channel-dispatcher-config-map
                      image: gcr.io/knative-releases/github.com/knative/eventing/cmd/fanoutsidecar@sha256:b57a317067d9a4299f08f6b05f161e50c8ac9b5e2cca812c41a938ad8b12ab38
                      name: dispatcher
                    serviceAccountName: default

        customresourcedefinitions:
          owned:
            - name: channels.eventing.knative.dev
              kind: Channel
              description: Channel
              displayName: Channel
              version: v1alpha1
            - name: clusterchannelprovisioners.eventing.knative.dev
              kind: ClusterChannelProvisioner
              description: ClusterChannelProvisioner
              displayName: ClusterChannelProvisioner
              version: v1alpha1
            - name: subscriptions.eventing.knative.dev
              kind: Subscription
              description: Subscription
              displayName: Subscription
              version: v1alpha1
            - name: containersources.sources.eventing.knative.dev
              kind: ContainerSource
              description: ContainerSource
              displayName: ContainerSource
              version: v1alpha1
            - name: githubsources.sources.eventing.knative.dev
              kind: GitHubSource
              description: GitHubSource
              displayName: GitHubSource
              version: v1alpha1
            - name: kuberneteseventsources.sources.eventing.knative.dev
              kind: KubernetesEventSource
              description: KubernetesEventSource
              displayName: KubernetesEventSource
              version: v1alpha1
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: knative-eventing.v0.2.1
      spec:
        displayName: Knative Eventing
        description: |
          Kubernetes-native Eventing resource
        version: 0.2.1
        maturity: alpha
        replaces: knative-eventing.v0.2.0

        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces

        install:
          strategy: deployment
          spec:
            clusterPermissions:
            - serviceAccountName: default
              rules:
              - apiGroups:
                - '*'
                resources:
                - '*'
                verbs:
                - '*'
              - nonResourceURLs:
                - '*'
                verbs:
                - '*'

            deployments:
            - name: eventing-controller
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: eventing-controller
                template:
                  metadata:
                    labels:
                      app: eventing-controller
                  spec:
                    containers:
                    - args:
                      - -logtostderr
                      - -stderrthreshold
                      - INFO
                      - --experimentalControllers=subscription.eventing.knative.dev
                      image: gcr.io/knative-releases/github.com/knative/eventing/cmd/controller@sha256:3486cb9d337b829907532e78c8098b6680fbe3aa10a0aa81e7db327bb8980640
                      name: eventing-controller
                      terminationMessagePolicy: FallbackToLogsOnError
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    initContainers:
                    - name: olm-hack
                      image: lachlanevenson/k8s-kubectl
                      args: ['apply', '-f', 'https://raw.githubusercontent.com/openshift-cloud-functions/knative-operators/master/etc/hacks/knative-eventing-0.2.1.yaml']
                    serviceAccountName: default
                    volumes:
                    - configMap:
                        name: config-logging
                        optional: true
                      name: config-logging

            - name: webhook
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: webhook
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "false"
                    labels:
                      app: webhook
                      role: webhook
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/github.com/knative/eventing/cmd/webhook@sha256:1ec64e26ed2b8895e783e9c1a07a11376dcb244f75ad166b2b116f124b2f2d44
                      name: webhook
                      terminationMessagePolicy: FallbackToLogsOnError
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: default
                    volumes:
                    - configMap:
                        name: config-logging
                      name: config-logging

            - name: in-memory-channel-controller
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    clusterChannelProvisioner: in-memory-channel
                    role: controller
                template:
                  metadata:
                    labels:
                      clusterChannelProvisioner: in-memory-channel
                      role: controller
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/github.com/knative/eventing/pkg/controller/eventing/inmemory/controller@sha256:85a6954a9ab118872f6826425b213e57589de8f9f2ac97d31aef5d5022104532
                      name: controller
                    serviceAccountName: default

            - name: in-memory-channel-dispatcher
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    clusterChannelProvisioner: in-memory-channel
                    role: dispatcher
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "true"
                    labels:
                      clusterChannelProvisioner: in-memory-channel
                      role: dispatcher
                  spec:
                    containers:
                    - args:
                      - --sidecar_port=8080
                      - --config_map_noticer=watcher
                      - --config_map_namespace=knative-eventing
                      - --config_map_name=in-memory-channel-dispatcher-config-map
                      image: gcr.io/knative-releases/github.com/knative/eventing/cmd/fanoutsidecar@sha256:a04bdbe0ffad3c47286ebfb961648e9f1d2b366aea243e9ea1ae591e706de06d
                      name: dispatcher
                    serviceAccountName: default

        customresourcedefinitions:
          owned:
            - name: channels.eventing.knative.dev
              kind: Channel
              description: Channel
              displayName: Channel
              version: v1alpha1
            - name: clusterchannelprovisioners.eventing.knative.dev
              kind: ClusterChannelProvisioner
              description: ClusterChannelProvisioner
              displayName: ClusterChannelProvisioner
              version: v1alpha1
            - name: subscriptions.eventing.knative.dev
              kind: Subscription
              description: Subscription
              displayName: Subscription
              version: v1alpha1
            - name: containersources.sources.eventing.knative.dev
              kind: ContainerSource
              description: ContainerSource
              displayName: ContainerSource
              version: v1alpha1
            - name: githubsources.sources.eventing.knative.dev
              kind: GitHubSource
              description: GitHubSource
              displayName: GitHubSource
              version: v1alpha1
            - name: kuberneteseventsources.sources.eventing.knative.dev
              kind: KubernetesEventSource
              description: KubernetesEventSource
              displayName: KubernetesEventSource
              version: v1alpha1
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: knative-eventing.v0.3.0
      spec:
        displayName: Knative Eventing
        description: |
          Kubernetes-native Eventing resource
        version: 0.3.0
        maturity: alpha
        replaces: knative-eventing.v0.2.1

        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces

        install:
          strategy: deployment
          spec:
            clusterPermissions:
            - serviceAccountName: default
              rules:
              - apiGroups:
                - '*'
                resources:
                - '*'
                verbs:
                - '*'
              - nonResourceURLs:
                - '*'
                verbs:
                - '*'
            - serviceAccountName: eventing-controller
              rules:
              - apiGroups:
                - '*'
                resources:
                - '*'
                verbs:
                - '*'
              - nonResourceURLs:
                - '*'
                verbs:
                - '*'
            - serviceAccountName: in-memory-channel-controller
              rules:
              - apiGroups:
                - eventing.knative.dev
                resources:
                - channels
                - channels/status
                - clusterchannelprovisioners
                verbs:
                - get
                - list
                - watch
                - update
              - apiGroups:
                - eventing.knative.dev
                resources:
                - '*/finalizers'
                verbs:
                - update
              - apiGroups:
                - ""
                resources:
                - configmaps
                - services
                verbs:
                - get
                - list
                - watch
                - create
              - apiGroups:
                - ""
                resourceNames:
                - in-memory-channel-clusterbus
                resources:
                - services
                verbs:
                - delete
              - apiGroups:
                - ""
                resources:
                - services
                verbs:
                - update
              - apiGroups:
                - ""
                resourceNames:
                - in-memory-channel-dispatcher-config-map
                resources:
                - configmaps
                verbs:
                - update
              - apiGroups:
                - networking.istio.io
                resources:
                - virtualservices
                verbs:
                - get
                - list
                - watch
                - create
                - update
            - serviceAccountName: in-memory-channel-dispatcher
              rules:
              - apiGroups:
                - ""
                resources:
                - configmaps
                verbs:
                - get
                - list
                - watch

              # The above rules are from upstream. The remaining are
              # required for OpenShift

              - apiGroups:
                - security.openshift.io
                resources:
                - securitycontextconstraints
                verbs:
                - use
                resourceNames:
                - privileged

            deployments:
            - name: eventing-controller
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: eventing-controller
                template:
                  metadata:
                    labels:
                      app: eventing-controller
                  spec:
                    containers:
                    - args:
                      - -logtostderr
                      - -stderrthreshold
                      - INFO
                      - --experimentalControllers=subscription.eventing.knative.dev
                      image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-eventing-controller
                      name: eventing-controller
                      terminationMessagePolicy: FallbackToLogsOnError
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    initContainers:
                    - name: olm-hack
                      image: lachlanevenson/k8s-kubectl:v1.12.6
                      args: ['apply', '-f', 'https://raw.githubusercontent.com/mvinkler/knative-operators/knative-v0.3/etc/hacks/knative-eventing-0.3.0.yaml']
                    serviceAccountName: eventing-controller
                    volumes:
                    - configMap:
                        name: config-logging
                        optional: true
                      name: config-logging

            - name: webhook
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: webhook
                    role: webhook
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "false"
                    labels:
                      app: webhook
                      role: webhook
                  spec:
                    containers:
                    - image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-eventing-webhook
                      name: webhook
                      terminationMessagePolicy: FallbackToLogsOnError
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: eventing-controller
                    volumes:
                    - configMap:
                        name: config-logging
                      name: config-logging

            - name: in-memory-channel-controller
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    clusterChannelProvisioner: in-memory-channel
                    role: controller
                template:
                  metadata:
                    labels:
                      clusterChannelProvisioner: in-memory-channel
                      role: controller
                  spec:
                    containers:
                    - image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-eventing-in-memory-channel-controller
                      name: controller
                    serviceAccountName: in-memory-channel-controller

            - name: in-memory-channel-dispatcher
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    clusterChannelProvisioner: in-memory-channel
                    role: dispatcher
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "true"
                    labels:
                      clusterChannelProvisioner: in-memory-channel
                      role: dispatcher
                  spec:
                    containers:
                    - args:
                      - --sidecar_port=8080
                      - --config_map_noticer=watcher
                      - --config_map_namespace=knative-eventing
                      - --config_map_name=in-memory-channel-dispatcher-config-map
                      image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-eventing-fanoutsidecar
                      name: dispatcher
                    serviceAccountName: in-memory-channel-dispatcher

        customresourcedefinitions:
          owned:
            - name: channels.eventing.knative.dev
              kind: Channel
              description: Channel
              displayName: Channel
              version: v1alpha1
            - name: clusterchannelprovisioners.eventing.knative.dev
              kind: ClusterChannelProvisioner
              description: ClusterChannelProvisioner
              displayName: ClusterChannelProvisioner
              version: v1alpha1
            - name: subscriptions.eventing.knative.dev
              kind: Subscription
              description: Subscription
              displayName: Subscription
              version: v1alpha1
            - name: containersources.sources.eventing.knative.dev
              kind: ContainerSource
              description: ContainerSource
              displayName: ContainerSource
              version: v1alpha1
            - name: githubsources.sources.eventing.knative.dev
              kind: GitHubSource
              description: GitHubSource
              displayName: GitHubSource
              version: v1alpha1
            - name: kuberneteseventsources.sources.eventing.knative.dev
              kind: KubernetesEventSource
              description: KubernetesEventSource
              displayName: KubernetesEventSource
              version: v1alpha1
            - name: cronjobsources.sources.eventing.knative.dev
              kind: CronJobSource
              description: CronJobSource
              displayName: CronJobSource
              version: v1alpha1
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: knative-serving.v0.1.1
      spec:
        displayName: Knative Serving
        description: |
          Knative Serving builds on Kubernetes and Istio to support deploying and serving of serverless applications and functions
        version: 0.1.1
        maturity: alpha

        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: controller
              rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - namespaces
                - secrets
                - configmaps
                - endpoints
                - services
                - events
                - serviceaccounts
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - extensions
                resources:
                - ingresses
                - deployments
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - apps
                resources:
                - deployments
                - statefulsets
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - admissionregistration.k8s.io
                resources:
                - mutatingwebhookconfigurations
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - apiextensions.k8s.io
                resources:
                - customresourcedefinitions
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - serving.knative.dev
                resources:
                - configurations
                - configurationgenerations
                - routes
                - revisions
                - revisionuids
                - autoscalers
                - services
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - build.knative.dev
                resources:
                - builds
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - networking.istio.io
                resources:
                - virtualservices
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
            deployments:
            - name: activator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: activator
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "true"
                    labels:
                      app: activator
                      role: activator
                  spec:
                    containers:
                    - args:
                      - -logtostderr=true
                      - -stderrthreshold=INFO
                      image: gcr.io/knative-releases/github.com/knative/serving/cmd/activator@sha256:486d806e33f487d2475d1ff70eb5dcff51cf62a16f4b9af06788674b60b1f2ef
                      name: activator
                      ports:
                      - containerPort: 8080
                        name: http
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    initContainers:
                    - name: olm-hack
                      image: lachlanevenson/k8s-kubectl
                      args: ['apply', '-f', 'https://raw.githubusercontent.com/openshift-cloud-functions/knative-operators/3aea6b6/etc/hacks/knative-serving-0.1.1.yaml']
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                        optional: true
                      name: config-logging

            - name: controller
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: controller
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "false"
                    labels:
                      app: controller
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/github.com/knative/serving/cmd/controller@sha256:59abc8765d4396a3fc7cac27a932a9cc151ee66343fa5338fb7146b607c6e306
                      name: controller
                      ports:
                      - containerPort: 9090
                        name: metrics
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                      name: config-logging

            - name: webhook
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: webhook
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "false"
                    labels:
                      app: webhook
                      role: webhook
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/github.com/knative/serving/cmd/webhook@sha256:7196a38aaf11ed6426db7c40a771e4f2a27d987606b5773b2d05bb9676908e7d
                      name: webhook
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                      name: config-logging

        customresourcedefinitions:
          owned:
            - kind: Configuration
              name: configurations.serving.knative.dev
              description: "Maintains the desired state for your deployment. It provides a clean separation between code and configuration and follows the Twelve-Factor App methodology. Modifying a configuration creates a new revision."
              displayName: Configuration
              version: v1alpha1
            - kind: Revision
              name: revisions.serving.knative.dev
              description: "A point-in-time snapshot of the code and configuration for each modification made to the workload. Revisions are immutable objects and can be retained for as long as useful."
              displayName: Revision
              version: v1alpha1
            - kind: Route
              name: routes.serving.knative.dev
              description: "Maps a network endpoint to a one or more revisions. You can manage the traffic in several ways, including fractional traffic and named routes."
              displayName: Knative Route
              version: v1alpha1
            - kind: Service
              name: services.serving.knative.dev
              description: "Automatically manages the whole lifecycle of your workload. It controls the creation of other objects to ensure that your app has a route, a configuration, and a new revision for each update of the service. Service can be defined to always route traffic to the latest revision or to a pinned revision."
              displayName: Knative Service
              version: v1alpha1

          # TODO: Uncomment when scoped-namespacing is a thing,
          # otherwise build gets installed in serving's namespace

          # required:
          #   - kind: Build
          #     name: builds.build.knative.dev
          #     description: Create and run on-cluster processes to completion
          #     displayName: Build
          #     version: v1alpha1
          #   - kind: BuildTemplate
          #     name: buildtemplates.build.knative.dev
          #     description: Encapsulates a configurable, reusable build process
          #     displayName: Build Template
          #     version: v1alpha1
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: knative-serving.v0.2.0
      spec:
        displayName: Knative Serving
        description: |
          Knative Serving builds on Kubernetes and Istio to support deploying and serving of serverless applications and functions
        version: 0.2.0
        maturity: alpha
        replaces: knative-serving.v0.1.1

        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: controller
              rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - namespaces
                - secrets
                - configmaps
                - endpoints
                - services
                - events
                - serviceaccounts
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - extensions
                resources:
                - ingresses
                - deployments
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - apps
                resources:
                - deployments
                - deployments/scale
                - statefulsets
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - admissionregistration.k8s.io
                resources:
                - mutatingwebhookconfigurations
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - apiextensions.k8s.io
                resources:
                - customresourcedefinitions
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - serving.knative.dev
                resources:
                - configurations
                - configurationgenerations
                - routes
                - revisions
                - revisionuids
                - autoscalers
                - services
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - autoscaling.internal.knative.dev
                resources:
                - podautoscalers
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - caching.internal.knative.dev
                resources:
                - images
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - networking.internal.knative.dev
                resources:
                - clusteringresses
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - build.knative.dev
                resources:
                - builds
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - networking.istio.io
                resources:
                - virtualservices
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
            clusterPermissions:
            - serviceAccountName: controller
              rules:
              - apiGroups:
                - '*'
                resources:
                - '*'
                verbs:
                - '*'
              - nonResourceURLs:
                - '*'
                verbs:
                - '*'
            deployments:
            - name: activator
              spec:
                replicas: 3
                selector:
                  matchLabels:
                    app: activator
                    role: activator
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "true"
                    labels:
                      app: activator
                      role: activator
                  spec:
                    containers:
                    - args:
                      - -logtostderr=false
                      - -stderrthreshold=FATAL
                      env:
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      image: gcr.io/knative-releases/activator-2d008c4c36689d255523e5fa210c0bec@sha256:7ec2f4a860bfdc34b9d3fcbedee82ff1cf6630f9c33e401de18299b7361b5612
                      name: activator
                      ports:
                      - containerPort: 8080
                        name: activator-port
                      - containerPort: 9090
                        name: metrics-port
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    initContainers:
                    - name: olm-hack
                      image: lachlanevenson/k8s-kubectl
                      args: ['apply', '-f', 'https://raw.githubusercontent.com/openshift-cloud-functions/knative-operators/master/etc/hacks/knative-serving-0.2.0.yaml']
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                        optional: true
                      name: config-logging

            - name: autoscaler
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: autoscaler
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "true"
                    labels:
                      app: autoscaler
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/autoscaler-b41733a3e5694e8fc64777bdfd8e791a@sha256:10b49d7436765e104f4813915ac3a39f062b9ef2acc3b454bb42b573e90efb37
                      name: autoscaler
                      ports:
                      - containerPort: 8080
                        name: websocket
                      - containerPort: 9090
                        name: metrics
                      volumeMounts:
                      - mountPath: /etc/config-autoscaler
                        name: config-autoscaler
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-autoscaler
                      name: config-autoscaler
                    - configMap:
                        name: config-logging
                      name: config-logging
            - name: controller
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: controller
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "false"
                    labels:
                      app: controller
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/controller-43f0364ab2f6dab17267e80a1f6a4adc@sha256:eb257b8e80b32fe42f3eac714455baa9465d585f5bb571f2def54261ac44e0ff
                      name: controller
                      ports:
                      - containerPort: 9090
                        name: metrics
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                      name: config-logging

            - name: webhook
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: webhook
                    role: webhook
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "false"
                    labels:
                      app: webhook
                      role: webhook
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/webhook-37fa64b5b216d563332fd3210a121e52@sha256:99172e322f0f34f795d8f02a3f82a28954b70039ddcf772988e0fea677032faa
                      name: webhook
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                      name: config-logging

        customresourcedefinitions:
          owned:
            - kind: Configuration
              name: configurations.serving.knative.dev
              description: "Maintains the desired state for your deployment. It provides a clean separation between code and configuration and follows the Twelve-Factor App methodology. Modifying a configuration creates a new revision."
              displayName: Configuration
              version: v1alpha1
            - kind: Revision
              name: revisions.serving.knative.dev
              description: "A point-in-time snapshot of the code and configuration for each modification made to the workload. Revisions are immutable objects and can be retained for as long as useful."
              displayName: Revision
              version: v1alpha1
            - kind: Route
              name: routes.serving.knative.dev
              description: "Maps a network endpoint to a one or more revisions. You can manage the traffic in several ways, including fractional traffic and named routes."
              displayName: Knative Route
              version: v1alpha1
            - kind: Service
              name: services.serving.knative.dev
              description: "Automatically manages the whole lifecycle of your workload. It controls the creation of other objects to ensure that your app has a route, a configuration, and a new revision for each update of the service. Service can be defined to always route traffic to the latest revision or to a pinned revision."
              displayName: Knative Service
              version: v1alpha1
            - description: A cached build image?
              displayName: Image
              kind: Image
              name: images.caching.internal.knative.dev
              version: v1alpha1
            - description: A cluster ingress?
              displayName: Cluster Ingress
              kind: ClusterIngress
              name: clusteringresses.networking.internal.knative.dev
              version: v1alpha1
            - description: A pod autoscaler?
              displayName: Pod Autoscaler
              kind: PodAutoscaler
              name: podautoscalers.autoscaling.internal.knative.dev
              version: v1alpha1
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: knative-serving.v0.2.1
      spec:
        displayName: Knative Serving
        description: |
          Knative Serving builds on Kubernetes and Istio to support deploying and serving of serverless applications and functions
        version: 0.2.1
        maturity: alpha
        replaces: knative-serving.v0.2.0

        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: controller
              rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - namespaces
                - secrets
                - configmaps
                - endpoints
                - services
                - events
                - serviceaccounts
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - extensions
                resources:
                - ingresses
                - deployments
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - apps
                resources:
                - deployments
                - deployments/scale
                - statefulsets
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - admissionregistration.k8s.io
                resources:
                - mutatingwebhookconfigurations
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - apiextensions.k8s.io
                resources:
                - customresourcedefinitions
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - serving.knative.dev
                resources:
                - configurations
                - configurationgenerations
                - routes
                - revisions
                - revisionuids
                - autoscalers
                - services
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - autoscaling.internal.knative.dev
                resources:
                - podautoscalers
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - caching.internal.knative.dev
                resources:
                - images
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - networking.internal.knative.dev
                resources:
                - clusteringresses
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - build.knative.dev
                resources:
                - builds
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - networking.istio.io
                resources:
                - virtualservices
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
            clusterPermissions:
            - serviceAccountName: controller
              rules:
              - apiGroups:
                - '*'
                resources:
                - '*'
                verbs:
                - '*'
              - nonResourceURLs:
                - '*'
                verbs:
                - '*'
            deployments:
            - name: activator
              spec:
                replicas: 3
                selector:
                  matchLabels:
                    app: activator
                    role: activator
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "true"
                    labels:
                      app: activator
                      role: activator
                  spec:
                    containers:
                    - args:
                      - -logtostderr=false
                      - -stderrthreshold=FATAL
                      env:
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      image: gcr.io/knative-releases/github.com/knative/serving/cmd/activator@sha256:b3bff5f2c2aa68a4b7bd4d457980001c49bdbee63a8a816ecd9319732c424407
                      name: activator
                      ports:
                      - containerPort: 8080
                        name: activator-port
                      - containerPort: 9090
                        name: metrics-port
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    initContainers:
                    - name: olm-hack
                      image: lachlanevenson/k8s-kubectl
                      args: ['apply', '-f', 'https://raw.githubusercontent.com/openshift-cloud-functions/knative-operators/master/etc/hacks/knative-serving-0.2.1.yaml']
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                        optional: true
                      name: config-logging

            - name: autoscaler
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: autoscaler
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "true"
                    labels:
                      app: autoscaler
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/github.com/knative/serving/cmd/autoscaler@sha256:c27272ab505820d968d112b665a92b4576387221d82b8a466cbb5a609ea0748d
                      name: autoscaler
                      ports:
                      - containerPort: 8080
                        name: websocket
                      - containerPort: 9090
                        name: metrics
                      volumeMounts:
                      - mountPath: /etc/config-autoscaler
                        name: config-autoscaler
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-autoscaler
                      name: config-autoscaler
                    - configMap:
                        name: config-logging
                      name: config-logging
            - name: controller
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: controller
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "false"
                    labels:
                      app: controller
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/github.com/knative/serving/cmd/controller@sha256:455c17eed5d0472ffbba26d77e029598bbcb42d612da20efe9820f91b9f1aedd
                      name: controller
                      ports:
                      - containerPort: 9090
                        name: metrics
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                      name: config-logging

            - name: webhook
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: webhook
                    role: webhook
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "false"
                    labels:
                      app: webhook
                      role: webhook
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/github.com/knative/serving/cmd/webhook@sha256:3706a0ea4f8d1424e3664f1a990c611a32a50ee3fba5d368c8d66fd61d39f4da
                      name: webhook
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                      name: config-logging

        customresourcedefinitions:
          owned:
            - kind: Configuration
              name: configurations.serving.knative.dev
              description: "Maintains the desired state for your deployment. It provides a clean separation between code and configuration and follows the Twelve-Factor App methodology. Modifying a configuration creates a new revision."
              displayName: Configuration
              version: v1alpha1
            - kind: Revision
              name: revisions.serving.knative.dev
              description: "A point-in-time snapshot of the code and configuration for each modification made to the workload. Revisions are immutable objects and can be retained for as long as useful."
              displayName: Revision
              version: v1alpha1
            - kind: Route
              name: routes.serving.knative.dev
              description: "Maps a network endpoint to a one or more revisions. You can manage the traffic in several ways, including fractional traffic and named routes."
              displayName: Knative Route
              version: v1alpha1
            - kind: Service
              name: services.serving.knative.dev
              description: "Automatically manages the whole lifecycle of your workload. It controls the creation of other objects to ensure that your app has a route, a configuration, and a new revision for each update of the service. Service can be defined to always route traffic to the latest revision or to a pinned revision."
              displayName: Knative Service
              version: v1alpha1
            - description: A cached build image?
              displayName: Image
              kind: Image
              name: images.caching.internal.knative.dev
              version: v1alpha1
            - description: A cluster ingress?
              displayName: Cluster Ingress
              kind: ClusterIngress
              name: clusteringresses.networking.internal.knative.dev
              version: v1alpha1
            - description: A pod autoscaler?
              displayName: Pod Autoscaler
              kind: PodAutoscaler
              name: podautoscalers.autoscaling.internal.knative.dev
              version: v1alpha1
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: knative-serving.v0.2.2
      spec:
        displayName: Knative Serving
        description: |
          Knative Serving builds on Kubernetes and Istio to support deploying and serving of serverless applications and functions
        version: 0.2.2
        maturity: alpha
        replaces: knative-serving.v0.2.1

        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces

        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: controller
              rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - namespaces
                - secrets
                - configmaps
                - endpoints
                - services
                - events
                - serviceaccounts
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - extensions
                resources:
                - ingresses
                - deployments
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - apps
                resources:
                - deployments
                - deployments/scale
                - statefulsets
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - admissionregistration.k8s.io
                resources:
                - mutatingwebhookconfigurations
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - apiextensions.k8s.io
                resources:
                - customresourcedefinitions
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - serving.knative.dev
                resources:
                - configurations
                - configurationgenerations
                - routes
                - revisions
                - revisionuids
                - autoscalers
                - services
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - autoscaling.internal.knative.dev
                resources:
                - podautoscalers
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - caching.internal.knative.dev
                resources:
                - images
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - networking.internal.knative.dev
                resources:
                - clusteringresses
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - build.knative.dev
                resources:
                - builds
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - networking.istio.io
                resources:
                - virtualservices
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
            clusterPermissions:
            - serviceAccountName: controller
              rules:
              - apiGroups:
                - '*'
                resources:
                - '*'
                verbs:
                - '*'
              - nonResourceURLs:
                - '*'
                verbs:
                - '*'
            deployments:
            - name: activator
              spec:
                replicas: 3
                selector:
                  matchLabels:
                    app: activator
                    role: activator
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "true"
                    labels:
                      app: activator
                      role: activator
                  spec:
                    containers:
                    - args:
                      - -logtostderr=false
                      - -stderrthreshold=FATAL
                      env:
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      image: gcr.io/knative-releases/github.com/knative/serving/cmd/activator@sha256:7e7abd88a292cf24a0db80d71fa16e8505dd288c241cab0b6716848f0e7fcc04
                      name: activator
                      ports:
                      - containerPort: 8080
                        name: activator-port
                      - containerPort: 9090
                        name: metrics-port
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    initContainers:
                    - name: olm-hack
                      image: lachlanevenson/k8s-kubectl
                      args: ['apply', '-f', 'https://raw.githubusercontent.com/openshift-cloud-functions/knative-operators/0ec10b1/etc/hacks/knative-serving-0.2.2.yaml']
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                        optional: true
                      name: config-logging

            - name: autoscaler
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: autoscaler
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "true"
                    labels:
                      app: autoscaler
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/github.com/knative/serving/cmd/autoscaler@sha256:ee07884132c73b0eb0b3368ed096073b611f6a2c82289afacca1080fd6308c09
                      name: autoscaler
                      ports:
                      - containerPort: 8080
                        name: websocket
                      - containerPort: 9090
                        name: metrics
                      volumeMounts:
                      - mountPath: /etc/config-autoscaler
                        name: config-autoscaler
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-autoscaler
                      name: config-autoscaler
                    - configMap:
                        name: config-logging
                      name: config-logging
            - name: controller
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: controller
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "false"
                    labels:
                      app: controller
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/github.com/knative/serving/cmd/controller@sha256:bcfe127285a64f54a80ddbf00d62123a8795bbde6f7d360e4ffd86833ddc7612
                      name: controller
                      ports:
                      - containerPort: 9090
                        name: metrics
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                      name: config-logging

            - name: webhook
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: webhook
                    role: webhook
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "false"
                    labels:
                      app: webhook
                      role: webhook
                  spec:
                    containers:
                    - image: gcr.io/knative-releases/github.com/knative/serving/cmd/webhook@sha256:179b194db647b976c1e9b35c26013b52a016ef1889c6466c772ef60b40723525
                      name: webhook
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                      name: config-logging

        customresourcedefinitions:
          owned:
            - kind: Configuration
              name: configurations.serving.knative.dev
              description: "Maintains the desired state for your deployment. It provides a clean separation between code and configuration and follows the Twelve-Factor App methodology. Modifying a configuration creates a new revision."
              displayName: Configuration
              version: v1alpha1
              statusDescriptors:
                - description: The latest Revision for this Configuration
                  displayName: Latest Revision
                  path: latestCreatedRevisionName
                  x-descriptors:
                    - 'urn:alm:descriptor:text'
                - description: The conditions of this Configuration
                  displayName: Conditions
                  path: conditions
                  x-descriptors:
                    - 'urn:alm:descriptor:io.kubernetes.conditions'
            - kind: Revision
              name: revisions.serving.knative.dev
              description: "A point-in-time snapshot of the code and configuration for each modification made to the workload. Revisions are immutable objects and can be retained for as long as useful."
              displayName: Revision
              version: v1alpha1
            - kind: Route
              name: routes.serving.knative.dev
              description: "Maps a network endpoint to a one or more revisions. You can manage the traffic in several ways, including fractional traffic and named routes."
              displayName: Knative Route
              version: v1alpha1
            - kind: Service
              name: services.serving.knative.dev
              description: "Automatically manages the whole lifecycle of your workload. It controls the creation of other objects to ensure that your app has a route, a configuration, and a new revision for each update of the service. Service can be defined to always route traffic to the latest revision or to a pinned revision."
              displayName: Knative Service
              version: v1alpha1
              statusDescriptors:
                - description: The external domain name for this Service
                  displayName: External Domain
                  path: domain
                  x-descriptors:
                    - 'urn:alm:descriptor:text'
                - description: The in-cluster domain name for this Service
                  displayName: Internal Domain
                  path: address.hostname
                  x-descriptors:
                    - 'urn:alm:descriptor:text'
                - description: The latest Revision for this Service
                  displayName: Latest Revision
                  path: latestCreatedRevisionName
                  x-descriptors:
                    - 'urn:alm:descriptor:text'
                - description: The conditions of this Service
                  displayName: Conditions
                  path: conditions
                  x-descriptors:
                    - 'urn:alm:descriptor:io.kubernetes.conditions'
            - description: A cached build image?
              displayName: Image
              kind: Image
              name: images.caching.internal.knative.dev
              version: v1alpha1
            - description: A cluster ingress?
              displayName: Cluster Ingress
              kind: ClusterIngress
              name: clusteringresses.networking.internal.knative.dev
              version: v1alpha1
            - description: A pod autoscaler?
              displayName: Pod Autoscaler
              kind: PodAutoscaler
              name: podautoscalers.autoscaling.internal.knative.dev
              version: v1alpha1
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: knative-serving.v0.3.0
      spec:
        displayName: Knative Serving
        description: |
          Knative Serving builds on Kubernetes and Istio to support deploying and serving of serverless applications and functions
        version: 0.3.0
        maturity: alpha
        replaces: knative-serving.v0.2.2

        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces

        install:
          strategy: deployment
          spec:
            clusterPermissions:
            - serviceAccountName: controller
              rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - namespaces
                - secrets
                - configmaps
                - endpoints
                - services
                - events
                - serviceaccounts
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - extensions
                resources:
                - ingresses
                - deployments
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - apps
                resources:
                - deployments
                - deployments/scale
                - statefulsets
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - admissionregistration.k8s.io
                resources:
                - mutatingwebhookconfigurations
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - apiextensions.k8s.io
                resources:
                - customresourcedefinitions
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - serving.knative.dev
                resources:
                - configurations
                - routes
                - revisions
                - services
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - serving.knative.dev
                resources:
                - configurations/status
                - routes/status
                - revisions/status
                - services/status
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - autoscaling.internal.knative.dev
                resources:
                - podautoscalers
                - podautoscalers/status
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - autoscaling
                resources:
                - horizontalpodautoscalers
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - caching.internal.knative.dev
                resources:
                - images
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - networking.internal.knative.dev
                resources:
                - clusteringresses
                - clusteringresses/status
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - build.knative.dev
                resources:
                - builds
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch
              - apiGroups:
                - networking.istio.io
                resources:
                - virtualservices
                - gateways
                verbs:
                - get
                - list
                - create
                - update
                - delete
                - patch
                - watch

              # The above rules are from upstream. The remaining are
              # required for OpenShift

              - apiGroups:
                - security.openshift.io
                resources:
                - securitycontextconstraints
                verbs:
                - use
                resourceNames:
                - privileged
                - anyuid
              - apiGroups:
                - extensions
                resources:
                - deployments/finalizers
                verbs:
                - update
              - apiGroups:
                - serving.knative.dev
                - networking.internal.knative.dev
                resources:
                - '*/finalizers'
                verbs:
                - update

            deployments:
            - name: activator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: activator
                    role: activator
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "true"
                    labels:
                      app: activator
                      role: activator
                  spec:
                    containers:
                    - args:
                      - -logtostderr=false
                      - -stderrthreshold=FATAL
                      env:
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-serving-activator
                      name: activator
                      ports:
                      - containerPort: 8080
                        name: activator-port
                      - containerPort: 9090
                        name: metrics-port
                      resources:
                        limits:
                          cpu: 200m
                          memory: 600Mi
                        requests:
                          cpu: 20m
                          memory: 60Mi
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                      - mountPath: /etc/config-observability
                        name: config-observability
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                        optional: true
                      name: config-logging
                    - configMap:
                        name: config-observability
                        optional: true
                      name: config-observability

            - name: autoscaler
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: autoscaler
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "true"
                    labels:
                      app: autoscaler
                  spec:
                    containers:
                    - image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-serving-autoscaler
                      name: autoscaler
                      ports:
                      - containerPort: 8080
                        name: websocket
                      - containerPort: 9090
                        name: metrics
                      resources:
                        limits:
                          cpu: 300m
                          memory: 400Mi
                        requests:
                          cpu: 30m
                          memory: 40Mi
                      volumeMounts:
                      - mountPath: /etc/config-autoscaler
                        name: config-autoscaler
                      - mountPath: /etc/config-logging
                        name: config-logging
                      - mountPath: /etc/config-observability
                        name: config-observability
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-autoscaler
                      name: config-autoscaler
                    - configMap:
                        name: config-logging
                        optional: true
                      name: config-logging
                    - configMap:
                        name: config-observability
                        optional: true
                      name: config-observability

            - name: controller
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: controller
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "false"
                    labels:
                      app: controller
                  spec:
                    containers:
                    - image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-serving-controller
                      name: controller
                      ports:
                      - containerPort: 9090
                        name: metrics
                      resources:
                        limits:
                          cpu: 1000m
                          memory: 1000Mi
                        requests:
                          cpu: 100m
                          memory: 100Mi
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    initContainers:
                    - name: olm-hack
                      image: lachlanevenson/k8s-kubectl:v1.12.6
                      args: ['apply', '-f', 'https://raw.githubusercontent.com/mvinkler/knative-operators/knative-v0.3/etc/hacks/knative-serving-0.3.0.yaml']
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                        optional: true
                      name: config-logging

            - name: webhook
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: webhook
                    role: webhook
                template:
                  metadata:
                    annotations:
                      sidecar.istio.io/inject: "false"
                    labels:
                      app: webhook
                      role: webhook
                  spec:
                    containers:
                    - image: registry.svc.ci.openshift.org/openshift/knative-v0.3:knative-serving-webhook
                      name: webhook
                      resources:
                        limits:
                          cpu: 200m
                          memory: 200Mi
                        requests:
                          cpu: 20m
                          memory: 20Mi
                      volumeMounts:
                      - mountPath: /etc/config-logging
                        name: config-logging
                    serviceAccountName: controller
                    volumes:
                    - configMap:
                        name: config-logging
                        optional: true
                      name: config-logging

        customresourcedefinitions:
          owned:
            - kind: Configuration
              name: configurations.serving.knative.dev
              description: "Maintains the desired state for your deployment. It provides a clean separation between code and configuration and follows the Twelve-Factor App methodology. Modifying a configuration creates a new revision."
              displayName: Configuration
              version: v1alpha1
              statusDescriptors:
                - description: The latest Revision for this Configuration
                  displayName: Latest Revision
                  path: latestCreatedRevisionName
                  x-descriptors:
                    - 'urn:alm:descriptor:text'
                - description: The conditions of this Configuration
                  displayName: Conditions
                  path: conditions
                  x-descriptors:
                    - 'urn:alm:descriptor:io.kubernetes.conditions'
            - kind: Revision
              name: revisions.serving.knative.dev
              description: "A point-in-time snapshot of the code and configuration for each modification made to the workload. Revisions are immutable objects and can be retained for as long as useful."
              displayName: Revision
              version: v1alpha1
            - kind: Route
              name: routes.serving.knative.dev
              description: "Maps a network endpoint to a one or more revisions. You can manage the traffic in several ways, including fractional traffic and named routes."
              displayName: Knative Route
              version: v1alpha1
            - kind: Service
              name: services.serving.knative.dev
              description: "Automatically manages the whole lifecycle of your workload. It controls the creation of other objects to ensure that your app has a route, a configuration, and a new revision for each update of the service. Service can be defined to always route traffic to the latest revision or to a pinned revision."
              displayName: Knative Service
              version: v1alpha1
              statusDescriptors:
                - description: The external domain name for this Service
                  displayName: External Domain
                  path: domain
                  x-descriptors:
                    - 'urn:alm:descriptor:text'
                - description: The in-cluster domain name for this Service
                  displayName: Internal Domain
                  path: address.hostname
                  x-descriptors:
                    - 'urn:alm:descriptor:text'
                - description: The latest Revision for this Service
                  displayName: Latest Revision
                  path: latestCreatedRevisionName
                  x-descriptors:
                    - 'urn:alm:descriptor:text'
                - description: The conditions of this Service
                  displayName: Conditions
                  path: conditions
                  x-descriptors:
                    - 'urn:alm:descriptor:io.kubernetes.conditions'
            - description: A cached build image?
              displayName: Image
              kind: Image
              name: images.caching.internal.knative.dev
              version: v1alpha1
            - description: A cluster ingress?
              displayName: Cluster Ingress
              kind: ClusterIngress
              name: clusteringresses.networking.internal.knative.dev
              version: v1alpha1
            - description: A pod autoscaler?
              displayName: Pod Autoscaler
              kind: PodAutoscaler
              name: podautoscalers.autoscaling.internal.knative.dev
              version: v1alpha1
  packages: |-
    - packageName: knative-build
      channels:
      - name: alpha
        currentCSV: knative-build.v0.3.0
    - packageName: knative-eventing
      channels:
      - name: alpha
        currentCSV: knative-eventing.v0.3.0
    - packageName: knative-serving
      channels:
      - name: alpha
        currentCSV: knative-serving.v0.3.0
---
apiVersion: operators.coreos.com/v1alpha1
kind: CatalogSource
metadata:
  name: knative-operators
spec:
  configMap: knative-operators
  displayName: Knative Operators
  publisher: Red Hat
  sourceType: internal
